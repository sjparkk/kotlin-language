package com.example.kotlinlanguage.part2_1

/**
 * ===, !== 연산자
 *
 * 두 참조 변수가 같은 객체를 가리키고 있는지 확안하는 방법을 알아본다.
 * === : 해당 연산자는 두 참조 변수가 같은 객체를 가리키고 있는지 여부를 조사하는 연산자이다.
 */
fun main(args: Array<String>) {

    //a 와 b 에 똑같은 문자열 "one"을 저장
    // String 타입의 리터럴로 이루어진 표현식에 한해서는 참조 변수에 동일한 문자열을 저장하면 컴파일러는 매번 새로운 문자열을 생성하지 않고 하나의 문자열을 가리키도록 한다.
    var a = "one"
    var b = "one"

    //그렇기 때문에 true
    println(a === b)

    //다음과 같이 표현식이 리터럴로만 이루어져 있지 않으면, b가 a랑 똑같은 문자열을 저장하고 있다고 해도 새로운 문자열이 만들어진다.
    b = "on"
    b += "e"
    //서로 다른 객체의 참조값을 가지고 있으므로 true
    println(a !== b)

    //b가 a의 참조값을 가지고 있으므로 true
    b = a
    println(a === b)

    /**
     * 코틀린의 === 연산자는 자바의 == 연산자와 같다.
     * 코틀린에서의 == 은 자바의 equals 메서드를 호출한 것과 같은 효과를 지닌다.
     */
}